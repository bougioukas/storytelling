---
title: "Line chart"
---

```{r}
#| include: false
library(fontawesome)
```


We need to load the following packages:

```{r}
#| message: false
#| warning: false

library(ggrepel)
library(ggsci)
library(ggpp)
library(ggfx)
library(ggtext)
library(gghighlight)
library(ggforce)
library(paletteer)
#library(patchwork)

library(here)
library(tidyverse)
```



We load the file `covid_data.csv` in R.

```{r}
#| message: false

library(readr)
covid_data <- read_csv("data/covid_data.csv", col_types = cols(date = col_date(format = "%m/%d/%Y"))) 

head(covid_data)
```


Let's have a look at the types of variables:

```{r glimpse}
glimpse(covid_data)
```

The data frame contains `r nrow(covid_data)` rows and `r ncol(covid_data)` variables. There are 8 numeric variables, 4 variables of character type, and 2 variables with dates (one of `date` type and the other of `dttm` type):

-   **iso3c:** ISO3c country code as defined by ISO 3166-1 alpha-3
-   **country:** Country name
-   **date:** Calendar date
-   **confirmed:** Confirmed Covid-19 cases as reported by JHU CSSE (accumulated)
-   **deaths:** Covid-19-related deaths as reported by JHU CSSE (accumulated)
-   **recovered:** Covid-19 recoveries as reported by JHU CSSE (accumulated)
-   **total_tests:** Accumulated test counts as reported by Our World in Data
-   **region:** Country region as classified by the World Bank (time-stable)
-   **income:** Country income group as classified by the World Bank (time-stable)
-   **population:** Country population as reported by the World Bank (original identifier 'SP.POP.TOTL', time-stable)
-   **pop_density:** Country population density as reported by the World Bank (original identifier 'EN.POP.DNST', time-stable)
-   **life_expectancy** Average life expectancy at birth of country citizens in years as reported by the World Bank (original identifier 'SP.DYN.LE00.IN', time-stable)
-   **gdp_capita:** Country gross domestic product per capita, measured in 2010 US-\$ as reported by the World Bank (original identifier 'NY.GDP.PCAP.KD', time-stable)
-   **timestamp:** Date and time where data has been collected from authoritative sources



The data cover a period from `r min(covid_data$date)` to `r max(covid_data$date)`.

Suppose we are interested in investigating countries with population more than 1 million up to June, 12 2021 and we want also to calculate the cases per 100000 inhabitants and tests per capita:



```{r}
focus_cn <- c("CHN", "GBR", "USA", "JPN", "GRC", "MEX",
              "KOR", "ITA", "ESP", "BRA", "IND")

covid_deaths <- covid_data %>%
  select(date, iso3c, deaths) %>%
  group_by(iso3c) %>%
  arrange(date) %>%
  filter(deaths > 10, date < "2020-04-16") %>%
  mutate(days_elapsed = date - min(date),
         end_label = ifelse(date == max(date), iso3c, NA),
         end_label = case_when(iso3c %in% focus_cn ~ end_label,
                      TRUE ~ NA_character_),
         cgroup = case_when(iso3c %in% focus_cn ~ iso3c,
                   TRUE ~ "OTHER")) %>% 
  filter(days_elapsed < 55) |> 
  ungroup()
```



We also set particular colors for the selected countries:

```{r}
## Colors
cgroup_cols <- c(prismatic::clr_darken(
  paletteer_d("ggsci::category20_d3"), 0.2)[1:length(focus_cn)],
  "gray70")
```




```{r}
#| label: fig-final2
#| fig-cap: Final chart
#| fig-width: 12
#| fig-height: 8

death_log_curves <- covid_deaths %>% filter(cgroup != "OTHER") %>% 
    ggplot(mapping = aes(x = days_elapsed, y = deaths,
                         color = cgroup, label = end_label,
                         group = iso3c)) +
    geom_line(size = 0.8) +
    geom_text_repel(nudge_x = 0.2,
                    nudge_y = 0.1, size = 3,
                    segment.color = NA) +
    guides(color = "none") +
    scale_color_manual(values = cgroup_cols) +
  scale_y_log10(
      label = scales::comma, sec.axis = dup_axis(),
      breaks = c(10, 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000, 20000)) +
    labs(x = "Days Since 10th Confirmed Death",
         y = "Cumulative Number of Deaths (log2 scale)",
         title = "Coronavirus deaths in Italy, Spain, the UK and US are increasing more rapidly than they did in China",
         subtitle = "Cumulative number of deaths, by number of days since 10th deaths \nStars represent national lockdowns",
         caption = "Data: https://coronavirus.jhu.edu/map.html") +
  theme(panel.background = element_rect(fill = "#FFF1E6"),
        plot.background = element_rect(fill = "#FFF1E6"),
        axis.title = element_blank(),
        axis.ticks = element_blank()) +
geom_abline(intercept = log10(10), slope = log10(2), linetype = "dashed", color = "gray", size = 0.8) +
  geom_abline(intercept = log10(10), slope = log10(1.42), linetype = "dashed", color = "gray", size = 0.8) +
    geom_abline(intercept = log10(10), slope = log10(1.26), linetype = "dashed", color = "gray", size = 0.8) +
      geom_abline(intercept = log10(10), slope = log10(1.105), linetype = "dashed", color = "gray", size = 0.8)


death_log_curves

```



